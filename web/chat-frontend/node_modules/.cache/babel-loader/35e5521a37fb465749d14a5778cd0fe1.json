{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carte\\\\Desktop\\\\Programs\\\\ChatApp\\\\web\\\\chat-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nimport randomColor from 'randomcolor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    name: '',\n    color: ''\n  });\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    socketRef.current.on(\"message\", _ref => {\n      let {\n        name,\n        message,\n        color\n      } = _ref;\n      setChat([...chat, {\n        name,\n        message,\n        color\n      }]);\n    });\n    scrollToBottom();\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const onTextChange = async e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    }, () => changeColor);\n  };\n\n  const changeColor = () => {\n    console.log(\"hello world\");\n  };\n\n  const onMessageSubmit = e => {\n    const {\n      name,\n      message,\n      color\n    } = state;\n    socketRef.current.emit('message', {\n      name,\n      message,\n      color\n    });\n    e.preventDefault();\n    setState({\n      message: \"\",\n      name: name,\n      color: color\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map((_ref2, index) => {\n      let {\n        name,\n        message,\n        color\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: color\n        },\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 56\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"render-chat\",\n        children: [renderChat(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onMessageSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            name: \"name\",\n            onChange: e => onTextChange(e),\n            value: state.name,\n            label: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"message\",\n            onChange: e => onTextChange(e),\n            value: state.message,\n            id: \"outlined-multiline-static\",\n            variant: \"outlined\",\n            label: \"Message\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"jR7J34sw7QUEL55tQbO4AcmX7+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/carte/Desktop/Programs/ChatApp/web/chat-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","io","TextField","randomColor","App","state","setState","message","name","color","chat","setChat","socketRef","messagesEndRef","current","connect","on","scrollToBottom","disconnect","scrollIntoView","behavior","onTextChange","e","target","value","changeColor","console","log","onMessageSubmit","emit","preventDefault","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nimport randomColor from 'randomcolor';\n\nfunction App() {\n  const [state, setState] = useState({message: '', name: '', color: ''})\n  const [chat, setChat] = useState([])\n  const socketRef = useRef()\n  const messagesEndRef = useRef(null)\n\n  useEffect(\n\t\t() => {\n\t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\n\t\t\tsocketRef.current.on(\"message\", ({ name, message, color }) => {\n\t\t\t\tsetChat([ ...chat, { name, message, color } ])\n\t\t\t})\n\t\t\tscrollToBottom()\n\t\t\treturn () => socketRef.current.disconnect()\n\t\t},\n\t\t[ chat ]\n\t)\n  \n  const scrollToBottom = () => {\n\tmessagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  const onTextChange = async(e) => {\n    setState({...state, [e.target.name]: e.target.value}, () => changeColor);\n  }\n  const changeColor = () => {\n\tconsole.log(\"hello world\");\n  }\n \n  const onMessageSubmit = (e) => {\n    const {name, message, color} = state\n    socketRef.current.emit('message', {name, message, color})\n    e.preventDefault()\n    setState({message: \"\", name: name, color: color})\n  }\n\n  const renderChat = () => {\n    return chat.map(({name, message, color}, index) => (\n\n        <h3 style={{color: color}} key={index}>{name}: <span>{message}</span></h3>\n\n    ))\n  }\n\n\n  return (\n\t\t<div className=\"card\">\t\t\n\t\t\t<div className=\"chat\">\n\t\t\t<h1 className=\"title\">Chat Log</h1>\n\t\t\t<div className=\"render-chat\">\n\t\t\t\t\n\t\t\t\t{renderChat()}\n\t\t\t\t<div ref={messagesEndRef} />\n\t\t\t</div>\n\t\t\t<form onSubmit={onMessageSubmit}>\n\t\t\t\t<div className=\"message-field\">\n\t\t\t\t\t<TextField variant=\"outlined\" size=\"small\" name=\"name\" onChange={(e) => onTextChange(e)} value={state.name} label=\"Name\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\tonChange={(e) => onTextChange(e)}\n\t\t\t\t\t\tvalue={state.message}\n\t\t\t\t\t\tid=\"outlined-multiline-static\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tlabel=\"Message\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button>Send Message</button>\n\t\t\t</form>\t\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}